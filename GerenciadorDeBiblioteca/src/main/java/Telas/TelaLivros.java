/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Telas;

import Classes.Livros;
import DAO.LivrosDAO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author marcus
 */
public class TelaLivros extends javax.swing.JFrame {

    /**
     * Creates new form TelaLivros
     */
    public TelaLivros() {
        initComponents();
        carregarLivros();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        txtAutor = new javax.swing.JTextField();
        txtCategoria = new javax.swing.JTextField();
        txtAno = new javax.swing.JTextField();
        btAdicionar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();
        jButtonVoltar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbLivros = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Titulo:");

        jLabel2.setText("Autor:");

        jLabel3.setText("Categoria:");

        jLabel4.setText("Ano");

        txtAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAutorActionPerformed(evt);
            }
        });

        txtAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnoActionPerformed(evt);
            }
        });

        btAdicionar.setText("Adicionar");
        btAdicionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAdicionarMouseClicked(evt);
            }
        });
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btExcluirMouseClicked(evt);
            }
        });

        btAtualizar.setText("Atualizar");
        btAtualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAtualizarMouseClicked(evt);
            }
        });
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonVoltarMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("MathJax_Math", 1, 15)); // NOI18N
        jLabel5.setText("Livros");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTitulo)
                            .addComponent(txtAutor)
                            .addComponent(txtCategoria)
                            .addComponent(txtAno))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(btExcluir)
                        .addGap(18, 18, 18)
                        .addComponent(btAtualizar))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButtonVoltar)
                .addGap(70, 70, 70)
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVoltar)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btAdicionar)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btAtualizar)
                        .addComponent(btExcluir)))
                .addContainerGap())
        );

        tbLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Titulo", "Autor", "Categoria", "Ano"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbLivros);
        if (tbLivros.getColumnModel().getColumnCount() > 0) {
            tbLivros.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
     private void carregarLivros() {
        DefaultTableModel modelo = (DefaultTableModel) tbLivros.getModel();
        modelo.setNumRows(0);
        LivrosDAO livroDAO = new LivrosDAO();
        List<Livros> livros = livroDAO.getAllLivros();

        for (Livros livro : livros) {
            modelo.addRow(new Object[]{
                livro.getIdLivro(),
                livro.getTitulo(),
                livro.getIdAutor(),
                livro.getIdCategoria(), 
                livro.getAno()
            });
        }
    }
    
    private void txtAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAutorActionPerformed

    private void btAdicionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAdicionarMouseClicked
       // Obtém os valores dos campos de texto
    String titulo = txtTitulo.getText();
    String autor = txtAutor.getText();
    String categoria = txtCategoria.getText();
    String anoStr = txtAno.getText();

    // Verifica se os campos não estão vazios
    if (titulo.isEmpty() || autor.isEmpty() || categoria.isEmpty() || anoStr.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos!", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Converte o ano para inteiro
    int ano;
    try {
        ano = Integer.parseInt(anoStr);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Ano deve ser um número válido!", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Adiciona os valores na tabela (tbLivros)
    DefaultTableModel model = (DefaultTableModel) tbLivros.getModel();
    model.addRow(new Object[]{titulo, autor, categoria, ano});

    // Limpa os campos de texto após adicionar
    txtTitulo.setText("");
    txtAutor.setText("");
    txtCategoria.setText("");
    txtAno.setText("");
    }//GEN-LAST:event_btAdicionarMouseClicked

    private void btAtualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAtualizarMouseClicked
       // Obtém os valores dos campos de texto
    String titulo = txtTitulo.getText();
    String autor = txtAutor.getText();
    String categoria = txtCategoria.getText();
    String anoStr = txtAno.getText();

    // Verifica se os campos não estão vazios
    if (titulo.isEmpty() || autor.isEmpty() || categoria.isEmpty() || anoStr.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos!", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Converte o ano para inteiro
    int ano;
    try {
        ano = Integer.parseInt(anoStr);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Ano deve ser um número válido!", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Adiciona os valores na tabela (tbLivros)
    DefaultTableModel model = (DefaultTableModel) tbLivros.getModel();
    model.addRow(new Object[]{titulo, autor, categoria, ano});

    // Limpa os campos de texto após adicionar
    txtTitulo.setText("");
    txtAutor.setText("");
    txtCategoria.setText("");
    txtAno.setText("");
    }//GEN-LAST:event_btAtualizarMouseClicked

    private void btExcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btExcluirMouseClicked
        // Obtém a linha selecionada na tabela
    int selectedRow = tbLivros.getSelectedRow();
    
    // Verifica se há uma linha selecionada
    if (selectedRow != -1) {
        // Remove a linha da tabela
        DefaultTableModel model = (DefaultTableModel) tbLivros.getModel();
        model.removeRow(selectedRow);
    } else {
        // Se nenhuma linha estiver selecionada, exibe uma mensagem
        JOptionPane.showMessageDialog(null, "Nenhuma linha selecionada para exclusão!", "Erro", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btExcluirMouseClicked

    private void txtAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnoActionPerformed

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
    
       String titulo = txtTitulo.getText();
    int IdAutor = Integer.parseInt(txtAutor.getText()); 
    int IdCategoria = Integer.parseInt(txtCategoria.getText());
    int ano = Integer.parseInt(txtAno.getText()); 

    
    Livros livro = new Livros();
    livro.setTitulo(titulo);
    livro.setIdAutor(IdAutor); 
    livro.setIdCategoria(IdCategoria); 
    livro.setAno(ano);

  
    LivrosDAO livroDAO = new LivrosDAO();
    livroDAO.inserirLivro(livro);

    
    JOptionPane.showMessageDialog(this, "Livro inserido com sucesso!");

  
    txtTitulo.setText("");
    txtAutor.setText("");
    txtCategoria.setText("");
    txtAno.setText("");   
        /*   // TODO add your handling code here:
         String titulo = txtTitulo.getText();
    String autor = txtAutor.getText();
    String categoria = txtCategoria.getText();
    String anoStr = txtAno.getText();

    // Verifica se os campos não estão vazios
    if (titulo.isEmpty() || autor.isEmpty() || categoria.isEmpty() || anoStr.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos!", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Converte o ano para inteiro
    int ano;
    try {
        ano = Integer.parseInt(anoStr);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Ano deve ser um número válido!", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Adiciona os valores na tabela (tbLivros)
    DefaultTableModel model = (DefaultTableModel) tbLivros.getModel();
    int selectedRowIndex = tbLivros.getSelectedRow();
    
      if (selectedRowIndex != -1) {
        // Atualiza os valores na linha selecionada
        model.setValueAt(titulo, selectedRowIndex, 0); // Atualiza a coluna 0 (Nome)
        model.setValueAt(autor, selectedRowIndex, 1); // Atualiza a coluna 1 (Descrição)
        model.setValueAt(categoria, selectedRowIndex, 2);
        model.setValueAt(ano, selectedRowIndex, 3);
    } else {
        // Se nenhuma linha estiver selecionada, exibe uma mensagem
        JOptionPane.showMessageDialog(null, "Selecione uma linha para atualizar!", "Erro", JOptionPane.ERROR_MESSAGE);
    }

    // Limpa os campos de texto após adicionar
    txtTitulo.setText("");
    txtAutor.setText("");
    txtCategoria.setText("");
    txtAno.setText(""); */
    }//GEN-LAST:event_btAtualizarActionPerformed

    private void jButtonVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonVoltarMouseClicked
        // TODO add your handling code here:
       TelaPrincipal frameTelaPrincipal = new TelaPrincipal();
       frameTelaPrincipal.setVisible(true);
       setVisible(false);
    }//GEN-LAST:event_jButtonVoltarMouseClicked

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        String titulo = txtTitulo.getText();
    int IdAutor = Integer.parseInt(txtAutor.getText()); 
    int IdCategoria = Integer.parseInt(txtCategoria.getText());
    int ano = Integer.parseInt(txtAno.getText()); 

    
    Livros livro = new Livros();
    livro.setTitulo(titulo);
    livro.setIdAutor(IdAutor); 
    livro.setIdCategoria(IdCategoria); 
    livro.setAno(ano);

  
    LivrosDAO livroDAO = new LivrosDAO();
    livroDAO.inserirLivro(livro);

    
    JOptionPane.showMessageDialog(this, "Livro inserido com sucesso!");

  
    txtTitulo.setText("");
    txtAutor.setText("");
    txtCategoria.setText("");
    txtAno.setText("");
    }//GEN-LAST:event_btAdicionarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaLivros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbLivros;
    private javax.swing.JTextField txtAno;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
